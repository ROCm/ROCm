parameters:
# assumption componentName and pipeline name the same
- name: componentName
  type: string
  default: ''
- name: pipelineId
  type: string
  default: ''
- name: branchName
  type: string
  default: '$(Build.SourceBranchName)' # for tagged builds
- name: testFailuresOkay
  type: boolean
  default: false

steps:
- task: DownloadPipelineArtifact@2
  displayName: Download ${{ parameters.componentName }}
  inputs:
    buildType: 'specific'
    project: ROCm-CI
    pipeline: ${{ parameters.pipelineId }}
    specificBuildWithTriggering: true
    allowPartiallySucceededBuilds: ${{ parameters.testFailuresOkay }}
    branchName: ${{ parameters.branchName }}
    targetPath: '$(System.ArtifactsDirectory)'
- task: ExtractFiles@1
  displayName: Extract ${{ parameters.componentName }}
  inputs:
    archiveFilePatterns: '$(System.ArtifactsDirectory)/**/*.tar.gz'
    destinationFolder: '$(Agent.BuildDirectory)/rocm'
    cleanDestinationFolder: false
    overwriteExistingFiles: true
- task: DeleteFiles@1
  displayName: Cleanup Compressed ${{ parameters.componentName }}
  inputs:
    SourceFolder: '$(System.ArtifactsDirectory)'
    Contents: '/**/*.tar.gz'
    RemoveDotFiles: true
