parameters:
# assumption componentName and pipeline name the same
- name: componentName
  type: string
  default: ''
- name: pipelineId
  type: string
  default: ''
- name: branchName
  type: string
  default: '$(Build.SourceBranchName)' # for tagged builds
- name: fileFilter
  type: string
  default: ''

steps:
- task: Bash@3
  displayName: Set allowPartiallySucceededBuilds
  inputs:
    targetType: inline
    script: |
      if [[ ",$ALLOWED_PARTIAL_SUCCEED_BUILDS," == *",${{ parameters.componentName }},"* ]]; then
        echo "##vso[task.setvariable variable=allowPartiallySucceededBuilds;]true"
      else
        echo "##vso[task.setvariable variable=allowPartiallySucceededBuilds;]false"
      fi
- task: DownloadPipelineArtifact@2
  displayName: Download ${{ parameters.componentName }}
  inputs:
    buildType: 'specific'
    project: ROCm-CI
    definition: ${{ parameters.pipelineId }}
    specificBuildWithTriggering: true
    itemPattern: '**/*${{ parameters.fileFilter }}*'
    ${{ if notIn(parameters.componentName, 'aomp') }}: # remove this once these pipelines are functional + up-to-date
      buildVersionToDownload: latestFromBranch # default is 'latest'
    branchName: refs/heads/${{ parameters.branchName }}
    allowPartiallySucceededBuilds: $(allowPartiallySucceededBuilds)
    targetPath: '$(Pipeline.Workspace)/d'
- task: ExtractFiles@1
  displayName: Extract ${{ parameters.componentName }}
  inputs:
    archiveFilePatterns: '$(Pipeline.Workspace)/d/**/*.tar.gz'
    destinationFolder: '$(Agent.BuildDirectory)/rocm'
    cleanDestinationFolder: false
    overwriteExistingFiles: true
- task: DeleteFiles@1
  displayName: Cleanup Compressed ${{ parameters.componentName }}
  inputs:
    SourceFolder: '$(Pipeline.Workspace)/d'
    Contents: '**/*.tar.gz'
    RemoveDotFiles: true
