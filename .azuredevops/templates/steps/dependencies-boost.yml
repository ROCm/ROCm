# download and install rocm dependencies through pipeline builds in the project
# REQUIRED
parameters:
- name: dependencyList
  type: object
  default: []
- name: dependencySource
  type: string
  default: staging
  values:
    - staging
    - mainline
    - tag-builds
    - fixed
- name: extractToMnt
  type: boolean
  default: false
# required values for fixed selection
- name: fixedPipelineIdentifier
  type: string
  default: 0
- name: fixedComponentName
  type: string
  default: ''
- name: latestFromBranch
  type: boolean
  default: true

steps:
# fixed case only accepts one component at a time, so no array input
- task: DownloadPipelineArtifact@2
  displayName: Download ${{ parameters.componentName }}
  inputs:
    buildType: specific
    project: ROCm-CI
    definition: $(BOOST_DEPENDENCY_PIPELINE_ID)
    targetPath: $(Pipeline.Workspace)/d
- task: ExtractFiles@1
  displayName: Extract ${{ parameters.componentName }}
  inputs:
    archiveFilePatterns: '$(Pipeline.Workspace)/d/**/*.tar.gz'
    destinationFolder: $(Agent.BuildDirectory)/boost
    cleanDestinationFolder: true
    overwriteExistingFiles: true
- task: DeleteFiles@1
  displayName: Cleanup Compressed ${{ parameters.componentName }}
  inputs:
    SourceFolder: $(Pipeline.Workspace)/d
    Contents: '**/*.tar.gz'
    RemoveDotFiles: true
- task: Bash@3
  displayName: 'List noost files'
  inputs:
    targetType: inline
    script: ls -1R $(Agent.BuildDirectory)/boost
- task: Bash@3
  displayName: 'Link boost shared libraries'
  inputs:
    targetType: inline
    script: |
      echo $(Agent.BuildDirectory)/boost/lib | sudo tee /etc/ld.so.conf.d/boost.conf
      sudo cat /etc/ld.so.conf.d/boost.conf
      sudo ldconfig -v
      ldconfig -p
