parameters:
- name: checkoutRepo
  type: string
  default: 'self'
- name: checkoutRef
  type: string
  default: ''
- name: aptPackages
  type: object
  default:
    - cmake
    - git
    - libdnnl-dev
    - libdrm-dev
    - libmsgpack-dev
    - libnuma-dev
    - libprotobuf-dev
    - libsqlite3-dev
    - libtbb-dev
    - ninja-build
    - nlohmann-json3-dev
    - protobuf-compiler
    - python3-pip
    - python3-pybind11
    - python3-venv
- name: pipModules
  type: object
  default:
    - https://github.com/RadeonOpenCompute/rbuild/archive/master.tar.gz
    - onnx>=1.14.1
    - numpy>=1.21.6
    - typing>=3.7.4
    - pytest>=6.0.1
    - packaging>=23.0
    - protobuf>=3.20.2
- name: rocmDependencies
  type: object
  default:
    - aomp
    - aomp-extras
    - clr
    - composable_kernel
    - hipBLAS
    - hipBLAS-common
    - hipBLASLt
    - llvm-project
    - MIOpen
    - rocm-cmake
    - ROCR-Runtime
    - rocBLAS
    - rocminfo
    - rocMLIR
    - rocprofiler-register
    - roctracer
- name: rocmTestDependencies
  type: object
  default:
    - aomp
    - aomp-extras
    - clr
    - composable_kernel
    - hipBLAS
    - hipBLAS-common
    - hipBLASLt
    - llvm-project
    - MIOpen
    - rocm-cmake
    - ROCR-Runtime
    - rocBLAS
    - rocminfo
    - rocMLIR
    - rocprofiler-register
    - roctracer
# set to true if doing full build of ROCm stack
# and dependencies are pulled from same pipeline
- name: aggregatePipeline
  type: boolean
  default: false

jobs:
- job: AMDMIGraphX
  variables:
  - group: common
  - template: /.azuredevops/variables-global.yml
  pool: ${{ variables.MEDIUM_BUILD_POOL }}
  workspace:
    clean: all
  strategy:
    matrix:
      gfx942:
        JOB_GPU_TARGET: gfx942
      gfx90a:
        JOB_GPU_TARGET: gfx90a
  steps:
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-other.yml
    parameters:
      aptPackages: ${{ parameters.aptPackages }}
      pipModules: ${{ parameters.pipModules }}
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/preamble.yml
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/checkout.yml
    parameters:
      checkoutRepo: ${{ parameters.checkoutRepo }}
# half version should be fixed to 5.6.0
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/local-artifact-download.yml
    parameters:
      buildType: specific
      definitionId: ${{ variables.HALF560_PIPELINE_ID }}
      buildId: ${{ variables.HALF560_BUILD_ID }}
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-rocm.yml
    parameters:
      checkoutRef: ${{ parameters.checkoutRef }}
      dependencyList: ${{ parameters.rocmDependencies }}
      gpuTarget: $(JOB_GPU_TARGET)
      aggregatePipeline: ${{ parameters.aggregatePipeline }}
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/build-cmake.yml
    parameters:
      extraBuildFlags: >-
        -DCMAKE_BUILD_TYPE=Release
        -DGPU_TARGETS=$(JOB_GPU_TARGET)
        -DAMDGPU_TARGETS=$(JOB_GPU_TARGET)
        -DCMAKE_MODULE_PATH=$(Agent.BuildDirectory)/rocm/lib/cmake/hip
        -DCMAKE_PREFIX_PATH=$(Agent.BuildDirectory)/rocm/llvm;$(Agent.BuildDirectory)/rocm
        -DHALF_INCLUDE_DIR=$(Agent.BuildDirectory)/rocm/include
        -DBUILD_TESTING=ON
        -GNinja
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/manifest.yml
    parameters:
      gpuTarget: $(JOB_GPU_TARGET)
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/artifact-upload.yml
    parameters:
      gpuTarget: $(JOB_GPU_TARGET)
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/artifact-links.yml
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/docker-container.yml
    parameters:
      aptPackages: ${{ parameters.aptPackages }}
      pipModules: ${{ parameters.pipModules }}
      gpuTarget: $(JOB_GPU_TARGET)

- job: AMDMIGraphX_testing
  dependsOn: AMDMIGraphX
  condition:
    and(
      succeeded(),
      eq(variables.ENABLE_GFX942_TESTS, 'true'),
      not(containsValue(split(variables.DISABLED_GFX942_TESTS, ','), variables['Build.DefinitionName'])),
      ${{ eq(parameters.aggregatePipeline, false) }}
    )
  variables:
  - group: common
  - template: /.azuredevops/variables-global.yml
  - name: MIGRAPHX_TRACE_BENCHMARKING
    value: 1
  pool: $(JOB_TEST_POOL)
  workspace:
    clean: all
  strategy:
    matrix:
      gfx942:
        JOB_GPU_TARGET: gfx942
        JOB_TEST_POOL: ${{ variables.GFX942_TEST_POOL }}
      gfx90a:
        JOB_GPU_TARGET: gfx90a
        JOB_TEST_POOL: ${{ variables.GFX90A_TEST_POOL }}
  steps:
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-other.yml
    parameters:
      aptPackages: ${{ parameters.aptPackages }}
      pipModules: ${{ parameters.pipModules }}
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/preamble.yml
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/checkout.yml
    parameters:
      checkoutRepo: ${{ parameters.checkoutRepo }}
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-aqlprofile.yml
# half version should be fixed to 5.6.0
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/local-artifact-download.yml
    parameters:
      buildType: specific
      definitionId: ${{ variables.HALF560_PIPELINE_ID }}
      buildId: ${{ variables.HALF560_BUILD_ID }}
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-rocm.yml
    parameters:
      checkoutRef: ${{ parameters.checkoutRef }}
      dependencyList: ${{ parameters.rocmTestDependencies }}
      gpuTarget: $(JOB_GPU_TARGET)
  - task: CMake@1
    displayName: MIGraphXTest CMake Flags
    inputs:
      cmakeArgs: >-
        -DCMAKE_BUILD_TYPE=Release
        -DGPU_TARGETS=$(JOB_GPU_TARGET)
        -DAMDGPU_TARGETS=$(JOB_GPU_TARGET)
        -DCMAKE_MODULE_PATH=$(Agent.BuildDirectory)/rocm/lib/cmake/hip
        -DCMAKE_PREFIX_PATH=$(Agent.BuildDirectory)/rocm/llvm;$(Agent.BuildDirectory)/rocm
        -DHALF_INCLUDE_DIR=$(Agent.BuildDirectory)/rocm/include
        -DBUILD_TESTING=ON
        -DMIGRAPHX_ENABLE_C_API_TEST=ON
        ..
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/gpu-diagnostics.yml
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/test.yml
    parameters:
      componentName: AMDMIGraphX
      testExecutable: make
      testParameters: -j$(nproc) check
      testPublishResults: false
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/docker-container.yml
    parameters:
      aptPackages: ${{ parameters.aptPackages }}
      pipModules: ${{ parameters.pipModules }}
      environment: test
      gpuTarget: $(JOB_GPU_TARGET)
      extraEnvVars:
        - MIGRAPHX_TRACE_BENCHMARKING:::1
