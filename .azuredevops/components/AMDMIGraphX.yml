parameters:
- name: checkoutRepo
  type: string
  default: 'self'
- name: checkoutRef
  type: string
  default: ''
- name: checkoutRefCompare
  type: string
  default: 'develop'
- name: aptPackages
  type: object
  default:
    - git
    - cmake
    - ninja-build
    - libdrm-dev
    - libnuma-dev
    - python3-pip
    - python3-venv
    - libtbb-dev
    - nlohmann-json3-dev
    - libmsgpack-dev
    - libsqlite3-dev
    - libprotobuf-dev
    - protobuf-compiler
    - python3-pybind11
- name: pipModules
  type: object
  default:
    - https://github.com/RadeonOpenCompute/rbuild/archive/master.tar.gz
    - onnx==1.14.1
    - numpy==1.21.6
    - typing==3.7.4
    - pytest==6.0.1
    - packaging==23.0
    - protobuf==3.20.2
- name: rocmDependencies
  type: object
  default:
    - aomp
    - aomp-extras
    - clr
    - composable_kernel
    - hipBLAS
    - hipBLAS-common
    - hipBLASLt
    - llvm-project
    - MIOpen
    - rocm-cmake
    - ROCR-Runtime
    - rocBLAS
    - rocminfo
    - rocMLIR
    - rocprofiler-register
- name: rocmTestDependencies
  type: object
  default:
    - aomp
    - aomp-extras
    - clr
    - composable_kernel
    - hipBLAS
    - hipBLAS-common
    - hipBLASLt
    - llvm-project
    - MIOpen
    - rocm-cmake
    - ROCR-Runtime
    - rocBLAS
    - rocminfo
    - rocMLIR
    - rocprofiler-register
    - roctracer

jobs:
- job: AMDMIGraphX
  variables:
  - group: common
  - template: /.azuredevops/variables-global.yml
  pool: ${{ variables.LARGE_DISK_BUILD_POOL }}
  workspace:
    clean: all
  strategy:
    matrix:
      gfx942:
        JOB_GPU_TARGET: gfx942
      # gfx90a:
      #   JOB_GPU_TARGET: gfx90a
  steps:
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-other.yml
    parameters:
      aptPackages: ${{ parameters.aptPackages }}
      pipModules: ${{ parameters.pipModules }}
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/preamble.yml
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/checkout.yml
    parameters:
      checkoutRepo: ${{ parameters.checkoutRepo }}
# half version should be fixed to 5.6.0
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-rocm.yml
    parameters:
      dependencySource: fixed
      fixedComponentName: half
      fixedPipelineIdentifier: ${{ variables.HALF560_PIPELINE_ID }}
      skipLibraryLinking: true
      skipLlvmSymlink: true
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-rocm.yml
    parameters:
      dependencyList: ${{ parameters.rocmDependencies }}
      gpuTarget: $(JOB_GPU_TARGET)
      # CI case: download latest default branch build
      ${{ if eq(parameters.checkoutRef, parameters.checkoutRefCompare) }}:
        dependencySource: staging
      # manual build case: triggered by ROCm/ROCm repo
      ${{ elseif ne(parameters.checkoutRef, parameters.checkoutRefCompare) }}:
        dependencySource: tag-builds
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/build-cmake.yml
    parameters:
      extraBuildFlags: >-
        -DCMAKE_CXX_COMPILER=$(Agent.BuildDirectory)/rocm/llvm/bin/clang++
        -DCMAKE_C_COMPILER=$(Agent.BuildDirectory)/rocm/llvm/bin/clang
        -DCMAKE_BUILD_TYPE=Release
        -DGPU_TARGETS=$(JOB_GPU_TARGET)
        -DAMDGPU_TARGETS=$(JOB_GPU_TARGET)
        -DCMAKE_PREFIX_PATH=$(Agent.BuildDirectory)/rocm/llvm;$(Agent.BuildDirectory)/rocm
        -DHALF_INCLUDE_DIR=$(Agent.BuildDirectory)/rocm/include
        -DMIGRAPHX_USE_COMPOSABLEKERNEL=OFF
        -DBUILD_TESTING=ON
        -GNinja
  - task: Bash@3
    displayName: Install MIGraphX tests
    inputs:
      targetType: inline
      script: make install-tests
      workingDirectory: build
# REFERENCE: https://github.com/ROCm/composable_kernel/issues/782
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/artifact-upload.yml
    parameters:
      gpuTarget: $(JOB_GPU_TARGET)
      publish: false
  # MIGraphX tests assume you are running tests in the exact same environment as the build (ie. right after the build)
  # Paths to test binaries and files are hardcoded(!!) during the build process
  # Just package the entire source directory to preserve the directory structure
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/artifact-prepare-package.yml
    parameters:
      sourceDir: $(Build.SourcesDirectory)
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/artifact-upload.yml
    parameters:
      artifactName: testFiles
      gpuTarget: $(JOB_GPU_TARGET)

# - job: AMDMIGraphX_testing
#   dependsOn: AMDMIGraphX
#   condition: succeeded()
#   variables:
#   - group: common
#   - template: /.azuredevops/variables-global.yml
#   pool: $(JOB_TEST_POOL)
#   workspace:
#     clean: all
#   strategy:
#     matrix:
#       gfx942:
#         JOB_GPU_TARGET: gfx942
#         JOB_TEST_POOL: ${{ variables.GFX942_TEST_POOL }}
#   steps:
#   - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-other.yml
#     parameters:
#       aptPackages: ${{ parameters.aptPackages }}
#       pipModules: ${{ parameters.pipModules }}
#   - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/preamble.yml
#   - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/local-artifact-download.yml
#     parameters:
#       artifactName: drop
#       gpuTarget: $(JOB_GPU_TARGET)
#   - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/local-artifact-download.yml
#     parameters:
#       artifactName: testFiles
#       gpuTarget: $(JOB_GPU_TARGET)
#       destinationFolder: $(Agent.BuildDirectory)/s
#   - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-aqlprofile.yml
#     parameters:
#       ${{ if eq(parameters.checkoutRef, parameters.checkoutRefCompare) }}:
#         dependencySource: staging
#       ${{ elseif ne(parameters.checkoutRef, parameters.checkoutRefCompare) }}:
#         dependencySource: tag-builds
#   - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-rocm.yml
#     parameters:
#       dependencyList: ${{ parameters.rocmTestDependencies }}
#       gpuTarget: $(JOB_GPU_TARGET)
#       ${{ if eq(parameters.checkoutRef, parameters.checkoutRefCompare) }}:
#         dependencySource: staging
#       ${{ elseif ne(parameters.checkoutRef, parameters.checkoutRefCompare) }}:
#         dependencySource: tag-builds
#   # Change the hardcoded MIGraphX test paths to the actual current directory
#   - task: Bash@3
#     displayName: Edit CTest paths
#     inputs:
#       targetType: inline
#       script: |
#         CURRENT_DIR=$(pwd)
#         find $CURRENT_DIR -name 'CTestTestfile.cmake' -type f -exec sed -ie "s:/agent/_work/.:$CURRENT_DIR:g" {} \;
#       workingDirectory: $(Agent.BuildDirectory)/s
#   - task: Bash@3
#     displayName: Create symlinks for MIGraphX build files
#     inputs:
#       targetType: inline
#       script: |
#         ln -s $(Agent.BuildDirectory)/s $(Agent.BuildDirectory)/rocm/s
#         ln -s $(Agent.BuildDirectory)/s $(Agent.BuildDirectory)/s/s
#   - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/test.yml
#     parameters:
#       componentName: AMDMIGraphX
#       testDir: '$(Agent.BuildDirectory)/rocm/s/build/test'
#   - task: Bash@3
#     displayName: 'List all files'
#     inputs:
#       targetType: inline
#       script: ls -1R $(Agent.BuildDirectory)
