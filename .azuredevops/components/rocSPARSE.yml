parameters:
- name: checkoutRepo
  type: string
  default: 'self'
- name: checkoutRef
  type: string
  default: ''
- name: aptPackages
  type: object
  default:
    - python3-pip
    - cmake
    - ninja-build
    - libboost-program-options-dev
    - googletest
    - libfftw3-dev
    - git
    - gfortran
    - libgtest-dev
    - libdrm-dev
- name: rocmDependencies
  type: object
  default:
    - rocm-cmake
    - llvm-project
    - ROCR-Runtime
    - clr
    - rocBLAS
    - rocminfo
    - rocPRIM
    - rocprofiler-register
- name: rocmTestDependencies
  type: object
  default:
    - clr
    - llvm-project
    - rocBLAS
    - rocminfo
    - rocprofiler-register
    - ROCR-Runtime
    
jobs:
- job: rocSPARSE
  variables:
  - group: common
  - template: /.azuredevops/variables-global.yml
  - name: HIP_ROCCLR_HOME
    value: $(Build.BinariesDirectory)/rocm
  pool: ${{ variables.MEDIUM_BUILD_POOL }}
  workspace:
    clean: all
  strategy:
    matrix:
      gfx942:
        JOB_GPU_TARGET: gfx942
      gfx90a:
        JOB_GPU_TARGET: gfx90a
  steps:
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-other.yml
    parameters:
      aptPackages: ${{ parameters.aptPackages }}
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/preamble.yml
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/checkout.yml
    parameters:
      checkoutRepo: ${{ parameters.checkoutRepo }}
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-rocm.yml
    parameters:
      dependencyList: ${{ parameters.rocmDependencies }}
      gpuTarget: $(JOB_GPU_TARGET)
      # CI case: download latest default branch build
      ${{ if eq(parameters.checkoutRef, '') }}:
        dependencySource: staging
      # manual build case: triggered by ROCm/ROCm repo
      ${{ elseif ne(parameters.checkoutRef, '') }}:
        dependencySource: tag-builds
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/build-cmake.yml
    parameters:
      extraBuildFlags: >-
        -DCMAKE_CXX_COMPILER=$(Agent.BuildDirectory)/rocm/bin/hipcc
        -DCMAKE_C_COMPILER=$(Agent.BuildDirectory)/rocm/bin/hipcc
        -DCMAKE_PREFIX_PATH=$(Agent.BuildDirectory)/rocm
        -DROCM_PATH=$(Agent.BuildDirectory)/rocm
        -DCMAKE_BUILD_TYPE=Release
        -DAMDGPU_TARGETS=$(JOB_GPU_TARGET)
        -DBUILD_CLIENTS_SAMPLES=OFF
        -DBUILD_CLIENTS_TESTS=ON
        -DBUILD_CLIENTS_BENCHMARKS=OFF
        -DCMAKE_MODULE_PATH=$(Agent.BuildDirectory)/rocm/lib/cmake/hip;$(Agent.BuildDirectory)/rocm/hip/cmake
        -GNinja
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/artifact-upload.yml
    parameters:
      artifactName: rocSPARSE
      gpuTarget: $(JOB_GPU_TARGET)
      publish: false
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/artifact-prepare-package.yml
    parameters:
      sourceDir: $(Build.SourcesDirectory)/build/clients
      contentsString: matrices/**
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/artifact-upload.yml
    parameters:
      artifactName: testMatrices
      gpuTarget: $(JOB_GPU_TARGET)

- job: rocSPARSE_testing
  dependsOn: rocSPARSE
  condition: succeeded()
  variables:
  - group: common
  - template: /.azuredevops/variables-global.yml
  pool: $(JOB_TEST_POOL)
  workspace:
    clean: all
  strategy:
    matrix:
      gfx942:
        JOB_GPU_TARGET: gfx942
        JOB_TEST_POOL: ${{ variables.GFX942_TEST_POOL }}
  steps:
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-other.yml
    parameters:
      aptPackages: ${{ parameters.aptPackages }}
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/preamble.yml
  - task: DownloadPipelineArtifact@2
    inputs:
      targetPath: $(System.ArtifactsDirectory)
  - task: ExtractFiles@1
    inputs:
      archiveFilePatterns: '$(System.ArtifactsDirectory)/**/*.tar.gz'
      destinationFolder: '$(Agent.BuildDirectory)/rocm'
      cleanDestinationFolder: false
      overwriteExistingFiles: true
  - task: DeleteFiles@1
    inputs:
      SourceFolder: '$(System.ArtifactsDirectory)'
      Contents: '/**/*.tar.xz'
      RemoveDotFiles: true
  # Manually download aqlprofile, hard-coded 6.1.0 version
  - task: Bash@3
    displayName: 'Download aqlprofile'
    inputs:
      targetType: inline
      script: wget -nv https://repo.radeon.com/rocm/misc/aqlprofile/ubuntu-22.04/hsa-amd-aqlprofile_1.0.0.60200.60200-crdnnh.14213~22.04_amd64.deb
      workingDirectory: '$(Pipeline.Workspace)'
  - task: Bash@3
    displayName: 'Extract aqlprofile'
    inputs:
      targetType: inline
      script: |
        mkdir hsa-amd-aqlprofile
        dpkg-deb -R hsa-amd-aqlprofile_1.0.0.60200.60200-crdnnh.14213~22.04_amd64.deb hsa-amd-aqlprofile
      workingDirectory: '$(Pipeline.Workspace)'
  - task: Bash@3
    displayName: 'Move aqlprofile'
    inputs:
      targetType: inline
      script: |
        mkdir -p $(Agent.BuildDirectory)/rocm
        cp -R hsa-amd-aqlprofile/opt/rocm-6.2.0-14213/* $(Agent.BuildDirectory)/rocm
      workingDirectory: '$(Pipeline.Workspace)'
  # CI case: download latest default branch build
  - ${{ if eq(parameters.checkoutRef, '') }}:
    - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-rocm.yml
      parameters:
        dependencyList: ${{ parameters.rocmTestDependencies }}
        dependencySource: staging
        gpuTarget: $(JOB_GPU_TARGET)
  # manual build case: triggered by ROCm/ROCm repo
  - ${{ if ne(parameters.checkoutRef, '') }}:
    - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-rocm.yml
      parameters:
        dependencyList: ${{ parameters.rocmTestDependencies }}
        dependencySource: tag-builds
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/test.yml
    parameters:
      componentName: rocSPARSE
      testDir: '$(Agent.BuildDirectory)/rocm/bin'
      testExecutable: './rocsparse-test'
      testParameters: '--gtest_filter="*quick*"'
