parameters:
- name: checkoutRepo
  type: string
  default: 'self'
- name: checkoutRef
  type: string
  default: ''
- name: aptPackages
  type: object
  default:
    - cmake
    - ninja-build
    - python3-venv
    - git
    - libmsgpack-dev
    - gfortran
    - libopenblas-dev
    - googletest
    - libgtest-dev
    - wget
- name: pipModules
  type: object
  default:
    - joblib

jobs:
- job: rocBLAS
  variables:
  - group: common
  - template: /.azuredevops/variables-global.yml
  pool: ${{ variables.HIGH_BUILD_POOL }}
  container:
    image: ${{ variables.DOCKER_IMAGE_NAME }}:${{ variables.LATEST_DOCKER_VERSION }}
  workspace:
    clean: all
  steps:
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-other.yml
    parameters:
      aptPackages: ${{ parameters.aptPackages }}
      pipModules: ${{ parameters.pipModules }}
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/preamble.yml
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/checkout.yml
    parameters:
      checkoutRepo: ${{ parameters.checkoutRepo }}
#  - task: Bash@3
#    displayName: 'Download AOCL'
#    inputs:
#      targetType: inline
#      script: wget -nv -O blis.tar.gz https://github.com/amd/blis/releases/download/2.0/aocl-blis-mt-ubuntu-2.0.tar.gz
#      workingDirectory: '$(System.ArtifactsDirectory)'
#  - task: ExtractFiles@1
#    displayName: Extract AOCL
#    inputs:
#      archiveFilePatterns: '$(System.ArtifactsDirectory)/**/*.tar.gz'
#      destinationFolder: '$(Agent.BuildDirectory)/rocm'
#      cleanDestinationFolder: false
#      overwriteExistingFiles: true
#  - task: DeleteFiles@1
#    displayName: Cleanup Compressed AOCL
#    inputs:
#      SourceFolder: '$(System.ArtifactsDirectory)'
#      Contents: '/**/*.tar.gz'
#      RemoveDotFiles: true
#  - task: Bash@3
#    displayName: 'Clone lapack'
#    inputs:
#      targetType: inline
#      script: git clone --depth 1 --branch v3.9.1 https://github.com/Reference-LAPACK/lapack
#      workingDirectory: '$(Build.SourcesDirectory)'
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/build-cmake.yml
    parameters:
      componentName: lapack
      extraBuildFlags: >-
        -DCMAKE_BUILD_TYPE=Release
        -DCMAKE_Fortran_FLAGS=-fno-optimize-sibling-calls
        -DBUILD_TESTING=OFF
        -DCBLAS=ON
        -DLAPACKE=OFF
        -GNinja
      cmakeBuildDir: '$(Build.SourcesDirectory)/lapack/build'
      installDir: '$(Pipeline.Workspace)/deps-install'
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/build-cmake.yml
    parameters:
      extraBuildFlags: >-
        -DCMAKE_TOOLCHAIN_FILE=toolchain-linux.cmake
        -DCMAKE_PREFIX_PATH="/opt/rocm;$(Pipeline.Workspace)/deps-install"
        -DCMAKE_BUILD_TYPE=Release
        -DCMAKE_CXX_COMPILER=/opt/rocm/llvm/bin/clang++
        -DCMAKE_C_COMPILER=/opt/rocm/llvm/bin/clang
        -DAMDGPU_TARGETS=gfx1030;gfx1100
        -DTensile_CODE_OBJECT_VERSION=default
        -DTensile_LOGIC=asm_full
        -DTensile_SEPARATE_ARCHITECTURES=ON
        -DTensile_LAZY_LIBRARY_LOADING=ON
        -DTensile_LIBRARY_FORMAT=msgpack
        -DTENSILE_VENV_UPGRADE_PIP=ON
        -DBUILD_CLIENTS_TESTS=ON
        -DBUILD_CLIENTS_BENCHMARKS=OFF
        -DBUILD_CLIENTS_SAMPLES=OFF
        -GNinja
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/artifact-upload.yml
