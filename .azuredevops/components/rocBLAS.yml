parameters:
- name: checkoutRepo
  type: string
  default: 'self'
- name: checkoutRef
  type: string
  default: ''
- name: aptPackages
  type: object
  default:
    - cmake
    - gfortran
    - git
    - googletest
    - libdrm-dev
    - libgtest-dev
    - libmsgpack-dev
    - libopenblas-dev
    - ninja-build
    - python3-pip
    - python3-venv
    - wget
- name: pipModules
  type: object
  default:
    - joblib
- name: rocmDependencies
  type: object
  default:
    - aomp
    - aomp-extras
    - clr
    - llvm-project
    - rocm-cmake
    - rocm-core
    - rocm_smi_lib
    - rocminfo
    - rocprofiler-register
    - ROCR-Runtime
- name: rocmTestDependencies
  type: object
  default:
    - aomp
    - clr
    - llvm-project
    - rocminfo
    - rocprofiler-register
    - rocm_smi_lib
    - ROCR-Runtime

jobs:
- job: rocBLAS
  variables:
  - group: common
  - template: /.azuredevops/variables-global.yml
  - name: HIP_ROCCLR_HOME
    value: $(Build.BinariesDirectory)/rocm
  - name: TENSILE_ROCM_ASSEMBLER_PATH
    value: $(Agent.BuildDirectory)/rocm/llvm/bin/clang
  - name: CMAKE_CXX_COMPILER
    value: $(Agent.BuildDirectory)/rocm/bin/hipcc
  - name: TENSILE_ROCM_OFFLOAD_BUNDLER_PATH
    value: $(Agent.BuildDirectory)/rocm/llvm/bin/clang-offload-bundler
  pool: ${{ variables.LOW_BUILD_POOL }} # change this later
  workspace:
    clean: all
  steps:
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-other.yml
    parameters:
      aptPackages: ${{ parameters.aptPackages }}
      pipModules: ${{ parameters.pipModules }}
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/preamble.yml
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/checkout.yml
    parameters:
      checkoutRepo: ${{ parameters.checkoutRepo }}
# CI case: download latest default branch build
  - ${{ if eq(parameters.checkoutRef, 'develop') }}: # change this later
    - task: Bash@3
      displayName: 'Download AOCL'
      inputs:
        targetType: inline
        script: wget -nv https://download.amd.com/developer/eula/aocl/aocl-4-2/aocl-linux-gcc-4.2.0_1_amd64.deb
        workingDirectory: '$(Pipeline.Workspace)'
    - task: Bash@3
      displayName: 'Install AOCL'
      inputs:
        targetType: inline
        script: sudo apt install --yes ./aocl-linux-gcc-4.2.0_1_amd64.deb
        workingDirectory: '$(Pipeline.Workspace)'
    - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-rocm.yml
      parameters:
        dependencyList: ${{ parameters.rocmDependencies }}
        dependencySource: staging
# manual build case: triggered by ROCm/ROCm repo
  - ${{ if ne(parameters.checkoutRef, 'develop') }}: # change this later
    - task: Bash@3
      displayName: 'Download AOCL'
      inputs:
        targetType: inline
        script: wget -nv https://download.amd.com/developer/eula/aocl/aocl-4-1/aocl-linux-aocc-4.1.0_1_amd64.deb
        workingDirectory: '$(Pipeline.Workspace)'
    - task: Bash@3
      displayName: 'Install AOCL'
      inputs:
        targetType: inline
        script: sudo apt install --yes ./aocl-linux-aocc-4.1.0_1_amd64.deb
        workingDirectory: '$(Pipeline.Workspace)'
    - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-rocm.yml
      parameters:
        dependencyList: ${{ parameters.rocmDependencies }}
        dependencySource: tag-builds
  - script: echo $PATH
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/build-cmake.yml
    parameters:
      extraBuildFlags: >-
        -DCMAKE_TOOLCHAIN_FILE=toolchain-linux.cmake
        -DCMAKE_PREFIX_PATH=$(Agent.BuildDirectory)/rocm/llvm;$(Agent.BuildDirectory)/rocm;$(Pipeline.Workspace)/deps-install
        -DCMAKE_BUILD_TYPE=Release
        -DCMAKE_CXX_COMPILER=$(Agent.BuildDirectory)/rocm/bin/hipcc
        -DCMAKE_C_COMPILER=$(Agent.BuildDirectory)/rocm/bin/hipcc
        -DAMDGPU_TARGETS=gfx1030;gfx1100
        -DTensile_CODE_OBJECT_VERSION=default
        -DTensile_LOGIC=asm_full
        -DTensile_SEPARATE_ARCHITECTURES=ON
        -DTensile_LAZY_LIBRARY_LOADING=ON
        -DTensile_LIBRARY_FORMAT=msgpack
        -DBUILD_CLIENTS_TESTS=ON
        -DBUILD_CLIENTS_BENCHMARKS=OFF
        -DBUILD_CLIENTS_SAMPLES=OFF
        -DROCM_PATH=$(Agent.BuildDirectory)/rocm
        -GNinja
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/artifact-upload.yml

- job: rocBLAS_testing
  dependsOn: rocBLAS
  condition: succeeded()
  variables:
  - group: common
  - template: /.azuredevops/variables-global.yml
  pool: ${{ variables.ON_PREM_BUILD_POOL }}
  workspace:
    clean: all
  steps:
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-other.yml
    parameters:
      aptPackages: ${{ parameters.aptPackages }}
      pipModules: ${{ parameters.pipModules }}
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/preamble.yml
  - task: DownloadPipelineArtifact@2
    inputs:
      targetPath: $(System.ArtifactsDirectory)
      #   change this later
      #   you can comment out the first build job and use the below lines to download a specific past build
      #   this speeds up testing since you don't need to wait for the build job
      # project: ROCm-CI
      # buildType: specific
      # buildVersionToDownload: specific
      # definition: 116
      # pipelineId: 1398
  - task: ExtractFiles@1
    inputs:
      archiveFilePatterns: '$(System.ArtifactsDirectory)/**/*.tar.gz'
      destinationFolder: '$(Agent.BuildDirectory)/rocm'
      cleanDestinationFolder: false
      overwriteExistingFiles: true
  - task: DeleteFiles@1
    inputs:
      SourceFolder: '$(System.ArtifactsDirectory)'
      Contents: '/**/*.tar.xz'
      RemoveDotFiles: true
  # Manually download aqlprofile, hard-coded 6.1.0 version
  - task: Bash@3
    displayName: 'Download aqlprofile'
    inputs:
      targetType: inline
      script: wget -nv https://repo.radeon.com/rocm/apt/6.1/pool/main/h/hsa-amd-aqlprofile/hsa-amd-aqlprofile_1.0.0.60100.60100-82~22.04_amd64.deb
      workingDirectory: '$(Pipeline.Workspace)'
  - task: Bash@3
    displayName: 'Extract aqlprofile'
    inputs:
      targetType: inline
      script: |
        mkdir hsa-amd-aqlprofile
        dpkg-deb -R hsa-amd-aqlprofile_1.0.0.60100.60100-82~22.04_amd64.deb hsa-amd-aqlprofile
      workingDirectory: '$(Pipeline.Workspace)'
  - task: Bash@3
    displayName: 'Move aqlprofile'
    inputs:
      targetType: inline
      script: |
        mkdir -p $(Agent.BuildDirectory)/rocm
        cp -R hsa-amd-aqlprofile/opt/rocm-6.1.0/* $(Agent.BuildDirectory)/rocm
      workingDirectory: '$(Pipeline.Workspace)'
  # CI case: download latest default branch build
  - ${{ if eq(parameters.checkoutRef, 'develop') }}:
    - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-rocm.yml
      parameters:
        dependencyList: ${{ parameters.rocmTestDependencies }}
        dependencySource: staging
  # manual build case: triggered by ROCm/ROCm repo
  - ${{ if ne(parameters.checkoutRef, 'develop') }}:
    - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-rocm.yml
      parameters:
        dependencyList: ${{ parameters.rocmTestDependencies }}
        dependencySource: tag-builds
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/test.yml
    parameters:
      testDir: '$(Agent.BuildDirectory)/rocm/bin'
      testExecutable: './rocblas-test'
      testParameters: '--yaml rocblas_smoke.yaml --gtest_output=xml --gtest_color=yes'
