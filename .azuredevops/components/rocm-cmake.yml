parameters:
- name: checkoutRepo
  type: string
  default: 'self'
- name: checkoutRef
  type: string
  default: ''
- name: aptPackages
  type: object
  default:
    - doxygen
    - doxygen-doc
    - ninja-build
    - python3-pip
    - python3-sphinx
- name: pipModules
  type: object
  default:
    - cget
    - cmake==3.20.5
    - ninja
    - rocm-docs-core

jobs:
- job: rocm_cmake
  variables:
  - group: common
  - template: /.azuredevops/variables-global.yml
  pool: 
    vmImage: ${{ variables.BASE_BUILD_POOL }}
  workspace:
    clean: all
  steps:
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-other.yml
    parameters:
      aptPackages: ${{ parameters.aptPackages }}
      pipModules: ${{ parameters.pipModules }}
  - task: Bash@3
    displayName: Add CMake to PATH
    inputs:
      targetType: inline
      script: echo "##vso[task.prependpath]$(python3 -m site --user-base)/bin"
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/preamble.yml
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/checkout.yml
    parameters:
      checkoutRepo: ${{ parameters.checkoutRepo }}
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/build-cmake.yml
  - task: Bash@3
    displayName: CTest setup
    inputs:
      targetType: inline
      script: |
        python -m pip install -r $(Build.SourcesDirectory)/docs/requirements.txt
        python -m pip install -r $(Build.SourcesDirectory)/test/docsphinx/docs/.sphinx/requirements.txt
        git config --global user.email "you@example.com"
        git config --global user.name "Your Name"
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/test.yml
    parameters:
      componentName: rocm-cmake
      testParameters: '-E "pass-version-parent" --output-on-failure --force-new-ctest-process --output-junit test_output.xml'
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/manifest.yml
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/artifact-upload.yml
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/artifact-links.yml
  # - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/docker-container.yml
  #   parameters:
  #     aptPackages: ${{ parameters.aptPackages }}
  #     pipModules: ${{ parameters.pipModules }}
  #     environment: combined
