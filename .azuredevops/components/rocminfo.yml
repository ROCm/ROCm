parameters:
- name: checkoutRepo
  type: string
  default: 'self'
- name: checkoutRef
  type: string
  default: ''
- name: aptPackages
  type: object
  default:
    - cmake
    - libdrm-amdgpu-dev
    - libdrm-dev
    - python3-pip
- name: rocmDependencies
  type: object
  default:
    - ROCR-Runtime
    - rocprofiler-register
- name: rocmTestDependencies
  type: object
  default:
    - ROCR-Runtime
    - rocprofiler-register

jobs:
- job: rocminfo
  variables:
  - name: system.debug
    value: true
  - group: common
  - template: /.azuredevops/variables-global.yml
  pool: 
    vmImage: ${{ variables.BASE_BUILD_POOL }}
  workspace:
    clean: all
  strategy:
    matrix:
      gfx942:
        JOB_GPU_TARGET: gfx942
      gfx90a:
        JOB_GPU_TARGET: gfx90a
  steps:
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/pipeline-test.yml
    parameters:
      testParam: $(JOB_GPU_TARGET)
  # - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-other.yml
  #   parameters:
  #     aptPackages: ${{ parameters.aptPackages }}
  #     registerROCmPackages: true
  # - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/preamble.yml
  # - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/checkout.yml
  #   parameters:
  #     checkoutRepo: ${{ parameters.checkoutRepo }}
  # - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-rocm.yml
  #   parameters:
  #     checkoutRef: ${{ parameters.checkoutRef }}
  #     dependencyList: ${{ parameters.rocmDependencies }}
  #     skipLlvmSymlink: true
  # - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/build-cmake.yml
  #   parameters:
  #     extraBuildFlags: >-
  #       -DCMAKE_PREFIX_PATH=$(Agent.BuildDirectory)/rocm
  #       -DROCRTST_BLD_TYPE=release
  # - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/manifest.yml
  # - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/artifact-upload.yml
  # - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/artifact-links.yml
  # - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/docker-container.yml
  #   parameters:
  #     aptPackages: ${{ parameters.aptPackages }}
  #     registerROCmPackages: true

# - job: rocminfo_testing
#   dependsOn: rocminfo
#   condition: and(succeeded(), eq(variables.ENABLE_GFX942_TESTS, 'true'), not(containsValue(split(variables.DISABLED_GFX942_TESTS, ','), variables['Build.DefinitionName'])))
#   variables:
#   - group: common
#   - template: /.azuredevops/variables-global.yml
#   pool: $(JOB_TEST_POOL)
#   workspace:
#     clean: all
#   strategy:
#     matrix:
#       gfx942:
#         JOB_GPU_TARGET: gfx942
#         JOB_TEST_POOL: ${{ variables.GFX942_TEST_POOL }}
#       gfx90a:
#         JOB_GPU_TARGET: gfx90a
#         JOB_TEST_POOL: ${{ variables.GFX90A_TEST_POOL }}
#   steps:
#   - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-other.yml
#     parameters:
#       aptPackages: ${{ parameters.aptPackages }}
#   - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/preamble.yml
#   - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/local-artifact-download.yml
#   - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-rocm.yml
#     parameters:
#       checkoutRef: ${{ parameters.checkoutRef }}
#       dependencyList: ${{ parameters.rocmTestDependencies }}
#       gpuTarget: $(JOB_GPU_TARGET)
#   - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/gpu-diagnostics.yml
#     parameters:
#       runRocminfo: false
#   - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/test.yml
#     parameters:
#       componentName: rocminfo
#       testDir: '$(Agent.BuildDirectory)'
#       testExecutable: './rocm/bin/rocminfo'
#       testParameters: ''
#       testPublishResults: false
#   - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/test.yml
#     parameters:
#       componentName: rocm_agent_enumerator
#       testDir: '$(Agent.BuildDirectory)'
#       testExecutable: './rocm/bin/rocm_agent_enumerator'
#       testParameters: ''
#       testPublishResults: false
#   - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/docker-container.yml
#     parameters:
#       aptPackages: ${{ parameters.aptPackages }}
#       registerROCmPackages: true
#       environment: test
#       gpuTarget: $(JOB_GPU_TARGET)
