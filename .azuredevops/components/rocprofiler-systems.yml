# largely referenced from: https://github.com/ROCm/omnitrace/blob/main/.github/workflows/ubuntu-jammy.yml
parameters:
- name: checkoutRepo
  type: string
  default: 'self'
- name: checkoutRef
  type: string
  default: ''
- name: aptPackages
  type: object
  default:
    - autoconf
    - autotools-dev
    - bison
    - build-essential
    - bzip2
    - clang
    - cmake
    - environment-modules
    - ffmpeg
    - g++-12
    - libavcodec-dev
    - libavformat-dev
    - libavutil-dev
    - libdrm-amdgpu-dev
    - libdrm-dev
    - libfabric-dev
    - libiberty-dev
    - libpapi-dev
    - libpfm4-dev
    - libtool
    - libopenmpi-dev
    - m4
    - openmpi-bin
    - pkg-config
    - python3-pip
    - software-properties-common
    - texinfo
    - zlib1g-dev
- name: pipModules
  type: object
  default:
    - numpy
    - perfetto
    - dataclasses
- name: rocmDependencies
  type: object
  default:
    - aomp
    - clr
    - llvm-project
    - rccl
    - rocDecode
    - rocm-core
    - rocm_smi_lib
    - rocminfo
    - ROCR-Runtime
    - rocprofiler-register
    - rocprofiler-sdk

jobs:
- job: rocprofiler_systems
  variables:
  - group: common
  - template: /.azuredevops/variables-global.yml
  pool: ${{ variables.MEDIUM_BUILD_POOL }}
  workspace:
    clean: all
  strategy:
    matrix:
      gfx942:
        JOB_GPU_TARGET: gfx942
  steps:
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-other.yml
    parameters:
      aptPackages: ${{ parameters.aptPackages }}
      pipModules: ${{ parameters.pipModules }}
      registerRadeon: true
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/preamble.yml
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/checkout.yml
    parameters:
      checkoutRepo: ${{ parameters.checkoutRepo }}
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-aqlprofile.yml
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-rocm.yml
    parameters:
      checkoutRef: ${{ parameters.checkoutRef }}
      dependencyList: ${{ parameters.rocmDependencies }}
      gpuTarget: $(JOB_GPU_TARGET)
  - task: Bash@3
    displayName: ROCm symbolic link
    inputs:
      targetType: inline
      script: |
        sudo rm -rf /opt/rocm
        sudo ln -s $(Agent.BuildDirectory)/rocm /opt/rocm
  - task: Bash@3
    displayName: Add ROCm binaries to PATH
    inputs:
      targetType: inline
      script: echo "##vso[task.prependpath]$(Agent.BuildDirectory)/rocm/bin"
  - task: Bash@3
    displayName: Add ROCm compilers to PATH
    inputs:
      targetType: inline
      script: echo "##vso[task.prependpath]$(Agent.BuildDirectory)/rocm/llvm/bin"
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/build-cmake.yml
    parameters:
# build flags reference: https://rocm.docs.amd.com/projects/omnitrace/en/latest/install/install.html
      extraBuildFlags: >-
        -DCMAKE_PREFIX_PATH=$(Agent.BuildDirectory)/rocm
        -DROCM_PATH=$(Agent.BuildDirectory)/rocm
        -DROCPROFSYS_BUILD_TESTING=ON
        -DROCPROFSYS_BUILD_DYNINST=ON
        -DROCPROFSYS_BUILD_LIBUNWIND=ON
        -DROCPROFSYS_DISABLE_EXAMPLES="openmp-target"
        -DDYNINST_BUILD_TBB=ON
        -DDYNINST_BUILD_ELFUTILS=ON
        -DDYNINST_BUILD_LIBIBERTY=ON
        -DDYNINST_BUILD_BOOST=ON
        -DROCPROFSYS_USE_PAPI=ON
        -DROCPROFSYS_USE_MPI=ON
        -DGPU_TARGETS=$(JOB_GPU_TARGET)
      multithreadFlag: -- -j32
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/manifest.yml
    parameters:
      gpuTarget: $(JOB_GPU_TARGET)
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/artifact-upload.yml
    parameters:
      gpuTarget: $(JOB_GPU_TARGET)
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/artifact-links.yml
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/docker-container.yml
    parameters:
      aptPackages: ${{ parameters.aptPackages }}
      pipModules: ${{ parameters.pipModules }}
      gpuTarget: $(JOB_GPU_TARGET)
      registerROCmPackages: true
      optSymLink: true
      extraPaths: /home/user/workspace/rocm/bin:/home/user/workspace/rocm/llvm/bin

- job: rocprofiler_systems_testing
  dependsOn: rocprofiler_systems
  condition: and(succeeded(), eq(variables.ENABLE_GFX942_TESTS, 'true'), not(containsValue(split(variables.DISABLED_GFX942_TESTS, ','), variables['Build.DefinitionName'])))
  timeoutInMinutes: 180
  variables:
  - group: common
  - template: /.azuredevops/variables-global.yml
  pool:
    name: $(JOB_TEST_POOL)
    demands: firstRenderDeviceAccess
  workspace:
    clean: all
  strategy:
    matrix:
      gfx942:
        JOB_GPU_TARGET: gfx942
        JOB_TEST_POOL: ${{ variables.GFX942_TEST_POOL }}
  steps:
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-other.yml
    parameters:
      aptPackages: ${{ parameters.aptPackages }}
      pipModules: ${{ parameters.pipModules }}
      registerRadeon: true
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/preamble.yml
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/checkout.yml
    parameters:
      checkoutRepo: ${{ parameters.checkoutRepo }}
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-aqlprofile.yml
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-rocm.yml
    parameters:
      checkoutRef: ${{ parameters.checkoutRef }}
      dependencyList: ${{ parameters.rocmDependencies }}
      gpuTarget: $(JOB_GPU_TARGET)
  - task: Bash@3
    displayName: ROCm symbolic link
    inputs:
      targetType: inline
      script: |
        sudo rm -rf /opt/rocm
        sudo ln -s $(Agent.BuildDirectory)/rocm /opt/rocm
  - task: Bash@3
    displayName: Add ROCm binaries to PATH
    inputs:
      targetType: inline
      script: echo "##vso[task.prependpath]$(Agent.BuildDirectory)/rocm/bin"
  - task: Bash@3
    displayName: Add ROCm compilers to PATH
    inputs:
      targetType: inline
      script: echo "##vso[task.prependpath]$(Agent.BuildDirectory)/rocm/llvm/bin"
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/build-cmake.yml
    parameters:
# build flags reference: https://rocm.docs.amd.com/projects/omnitrace/en/latest/install/install.html
      extraBuildFlags: >-
        -DCMAKE_PREFIX_PATH=$(Agent.BuildDirectory)/rocm
        -DROCM_PATH=$(Agent.BuildDirectory)/rocm
        -DROCPROFSYS_BUILD_TESTING=ON
        -DROCPROFSYS_BUILD_DYNINST=ON
        -DROCPROFSYS_BUILD_LIBUNWIND=ON
        -DROCPROFSYS_DISABLE_EXAMPLES="openmp-target"
        -DDYNINST_BUILD_TBB=ON
        -DDYNINST_BUILD_ELFUTILS=ON
        -DDYNINST_BUILD_LIBIBERTY=ON
        -DDYNINST_BUILD_BOOST=ON
        -DROCPROFSYS_USE_PAPI=ON
        -DROCPROFSYS_USE_MPI=ON
        -DGPU_TARGETS=$(JOB_GPU_TARGET)
      multithreadFlag: -- -j32
  - task: Bash@3
    displayName: Set up rocprofiler-systems env
    inputs:
      targetType: inline
      script: source share/rocprofiler-systems/setup-env.sh
      workingDirectory: build
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/test.yml
    parameters:
      componentName: rocprofiler-systems
  - task: Bash@3
    displayName: Remove ROCm binaries from PATH
    condition: always()
    inputs:
      targetType: inline
      script: echo "##vso[task.setvariable variable=PATH]$(echo $PATH | sed -e 's;:$(Agent.BuildDirectory)/rocm/bin;;' -e 's;^/;;' -e 's;/$;;')"
  - task: Bash@3
    displayName: Remove ROCm compilers from PATH
    condition: always()
    inputs:
      targetType: inline
      script: echo "##vso[task.setvariable variable=PATH]$(echo $PATH | sed -e 's;:$(Agent.BuildDirectory)/rocm/llvm/bin;;' -e 's;^/;;' -e 's;/$;;')"
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/manifest.yml
    parameters:
      gpuTarget: $(JOB_GPU_TARGET)
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/artifact-upload.yml
    parameters:
      gpuTarget: $(JOB_GPU_TARGET)
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/docker-container.yml
    parameters:
      aptPackages: ${{ parameters.aptPackages }}
      pipModules: ${{ parameters.pipModules }}
      environment: test
      registerROCmPackages: true
      gpuTarget: $(JOB_GPU_TARGET)
      optSymLink: true
      extraPaths: /home/user/workspace/rocm/bin:/home/user/workspace/rocm/llvm/bin
