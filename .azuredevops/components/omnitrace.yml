# largely referenced from: https://github.com/ROCm/omnitrace/blob/main/.github/workflows/ubuntu-jammy.yml
parameters:
- name: checkoutRepo
  type: string
  default: 'self'
- name: checkoutRef
  type: string
  default: ''
- name: aptPackages
  type: object
  default:
    - autoconf
    - build-essential
    - clang
    - cmake
    - environment-modules
    - g++-12
    - libdrm-dev
    - libfabric-dev
    - libiberty-dev
    - libtool
    # - libomp-dev
    - libopenmpi-dev
    - m4
    - ninja-build
    - openmpi-bin
    - software-properties-common
    - python3-pip
- name: pipModules
  type: object
  default:
    - numpy
    - perfetto
    - dataclasses
- name: rocmDependencies
  type: object
  default:
    - clr
    - llvm-project
    - rocm-core
    - rocm_smi_lib
    - rocminfo
    - ROCR-Runtime
    - rocprofiler
    - rocprofiler-register
    - roctracer

jobs:
- job: omnitrace
  variables:
  - group: common
  - template: /.azuredevops/variables-global.yml
  pool: ${{ variables.MEDIUM_BUILD_POOL }}
  workspace:
    clean: all
  strategy:
    matrix:
      gfx942:
        JOB_GPU_TARGET: gfx942
      # gfx90a:
      #   JOB_GPU_TARGET: gfx90a
  steps:
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-other.yml
    parameters:
      aptPackages: ${{ parameters.aptPackages }}
      pipModules: ${{ parameters.pipModules }}
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/preamble.yml
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/checkout.yml
    parameters:
      checkoutRepo: ${{ parameters.checkoutRepo }}
  # - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-aqlprofile.yml
  #   parameters:
  #     ${{ if eq(parameters.checkoutRef, 'main') }}:
  #       dependencySource: staging
  #     ${{ elseif ne(parameters.checkoutRef, 'main') }}:
  #       dependencySource: tag-builds
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-rocm.yml
    parameters:
      dependencyList: ${{ parameters.rocmDependencies }}
      gpuTarget: $(JOB_GPU_TARGET)
      # CI case: download latest default branch build
      ${{ if eq(parameters.checkoutRef, 'main') }}:
        dependencySource: staging
      # manual build case: triggered by ROCm/ROCm repo
      ${{ elseif ne(parameters.checkoutRef, 'main') }}:
        dependencySource: tag-builds
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/build-cmake.yml
    parameters:
      extraBuildFlags: >-
        -DCMAKE_PREFIX_PATH=$(Agent.BuildDirectory)/rocm
        -DOMNITRACE_BUILD_TESTING=ON
        -DOMNITRACE_BUILD_DYNINST=ON
        -DOMNITRACE_BUILD_LIBUNWIND=ON
        -DDYNINST_BUILD_TBB=ON
        -DDYNINST_BUILD_ELFUTILS=ON
        -DDYNINST_BUILD_LIBIBERTY=ON
        -DDYNINST_BUILD_BOOST=ON
        -DOMNITRACE_USE_PAPI=ON
        -DOMNITRACE_USE_MPI=ON
        -GNinja
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/artifact-upload.yml
    parameters:
      gpuTarget: $(JOB_GPU_TARGET)
