parameters:
- name: checkoutRepo
  type: string
  default: 'self'
- name: checkoutRef
  type: string
  default: ''
- name: aptPackages
  type: object
  default:
    - software-properties-common
    - cmake
    - ninja-build
    - composablekernel-dev
    - half
    - rocrand
    - rocblas
    - libsqlite3-dev
    - libbz2-dev
    - nlohmann-json3-dev
    - libgtest-dev

jobs:
- job: MIOpen
  variables:
  - group: common
  - template: /.azuredevops/variables-global.yml
  pool: ${{ variables.HIGH_END_BUILD_POOL }}
  container:
    image: ${{ variables.DOCKER_IMAGE_NAME }}:${{ variables.LATEST_DOCKER_VERSION }}
  workspace:
    clean: all
  steps:
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies.yml
    parameters:
      aptPackages: ${{ parameters.aptPackages }}
  - task: Bash@3
    displayName: 'update boost version'
    inputs:
      targetType: inline
      script: sudo add-apt-repository ppa:mhier/libboost-latest -y
  - task: Bash@3
    displayName: 'install boost'
    inputs:
      targetType: inline
      script: sudo apt-get --yes install libboost1.83-dev libboost-system1.83-dev libboost-filesystem1.83-dev
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/preamble.yml
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/checkout.yml
    parameters:
      checkoutRepo: ${{ parameters.checkoutRepo }}
  # CI case: download latest default branch build
  - ${{ if eq(parameters.checkoutRef, '') }}:
    - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/artifact-download.yml
      parameters:
        componentName: rocmlir
        branchName: develop
        pipelineId: $(rocmlir-pipeline-id)
  # manual build case: triggered by ROCm/ROCm repo
  - ${{ if ne(parameters.checkoutRef, '') }}:
    - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/artifact-download.yml
      parameters:
        componentName: \tag-builds\rocmlir
        pipelineId: $(rocmlir-tagged-pipeline-id)
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/build-cmake.yml
    parameters:
      extraBuildFlags: >-
        -DMIOPEN_BACKEND=HIP
        -DCMAKE_CXX_COMPILER=/opt/rocm/llvm/bin/clang++
        -DCMAKE_C_COMPILER=/opt/rocm/llvm/bin/clang
        -DCMAKE_PREFIX_PATH="$(Build.SourcesDirectory)/bin"
        -DMIOPEN_ENABLE_AI_KERNEL_TUNING=OFF
        -DMIOPEN_ENABLE_AI_IMMED_MODE_FALLBACK=OFF
        -DCMAKE_BUILD_TYPE=Release
        -GNinja
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/artifact-upload.yml
