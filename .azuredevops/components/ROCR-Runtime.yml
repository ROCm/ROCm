parameters:
- name: checkoutRepo
  type: string
  default: 'self'
- name: checkoutRef
  type: string
  default: ''
- name: aptPackages
  type: object
  default:
    - g++
    - libdrm-dev
    - libelf-dev
    - libhwloc-dev
    - libnuma-dev
- name: rocmDependencies
  type: object
  default:
    - llvm-project
    - rocprofiler-register
- name: rocmTestDependencies
  type: object
  default:
    - llvm-project
    - rocm_smi

jobs:
# - job: ROCR_Runtime
#   variables:
#   - group: common
#   - template: /.azuredevops/variables-global.yml
#   pool:
#     vmImage: ${{ variables.BASE_BUILD_POOL }}
#   workspace:
#     clean: all
#   steps:
#   - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-other.yml
#     parameters:
#       aptPackages: ${{ parameters.aptPackages }}
#   - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/preamble.yml
#   - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/checkout.yml
#     parameters:
#       checkoutRepo: ${{ parameters.checkoutRepo }}
#   - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-rocm.yml
#     parameters:
#       dependencyList: ${{ parameters.rocmDependencies }}
#       # CI case: download latest default branch build
#       ${{ if eq(parameters.checkoutRef, 'amd-staging') }}:
#         dependencySource: staging
#       # manual build case: triggered by ROCm/ROCm repo
#       ${{ elseif ne(parameters.checkoutRef, 'amd-staging') }}:
#         dependencySource: tag-builds
#   - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/build-cmake.yml
#     parameters:
#       extraBuildFlags: >-
#         -DCMAKE_PREFIX_PATH=$(Agent.BuildDirectory)/rocm
#         -DBUILD_SHARED_LIBS=ON
#   - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/artifact-upload.yml

- job: ROCR_Runtime_testing
  # dependsOn: ROCR_Runtime
  # condition: succeeded()
  variables:
  - group: common
  - template: /.azuredevops/variables-global.yml
  pool: $(JOB_TEST_POOL)
  workspace:
    clean: all
  strategy:
    matrix:
      gfx942:
        JOB_GPU_TARGET: gfx942
        JOB_TEST_POOL: ${{ variables.GFX942_TEST_POOL }}
  steps:
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-other.yml
    parameters:
      aptPackages: ${{ parameters.aptPackages }}
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/preamble.yml
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/local-artifact-download.yml
    parameters:
      buildType: specific
      definitionId: 164
      buildId: 7686
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-rocm.yml
    parameters:
      dependencyList: ${{ parameters.rocmTestDependencies }}
      gpuTarget: $(JOB_GPU_TARGET)
      ${{ if eq(parameters.checkoutRef, 'amd-staging') }}:
        dependencySource: staging
      ${{ elseif ne(parameters.checkoutRef, 'amd-staging') }}:
        dependencySource: tag-builds
  - task: Bash@3
    displayName: Build kfdtest
    inputs:
      targetType: 'inline'
      script: |
        cd $(Agent.BuildDirectory)
        git clone https://github.com/ROCm/ROCR-Runtime.git --depth=1
        cd ROCR-Runtime/libhsakmt/tests/kfdtest
        mkdir build && cd build
        cmake -DCMAKE_PREFIX_PATH=$(Agent.BuildDirectory)/rocm ..
        make
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/test.yml
    parameters:
      componentName: kfdtest
      testExecutable: BIN_DIR=$(Agent.BuildDirectory)/ROCR-Runtime/libhsakmt/tests/kfdtest/build ./run_kfdtest.sh
      testParameters: '-p core --gtest_output=xml:./test_output.xml --gtest_color=yes'
      testDir: $(Agent.BuildDirectory)/ROCR-Runtime/libhsakmt/tests/kfdtest/scripts
  - task: Bash@3
    displayName: Build rocrtst
    inputs:
      targetType: 'inline'
      script: |
        cd $(Agent.BuildDirectory)/ROCR-Runtime/rocrtst/suites/test_common
        mkdir build && cd build
        cmake .. \
          -DCMAKE_PREFIX_PATH=$(Agent.BuildDirectory)/rocm \
          -DTARGET_DEVICES=gfx942 \
          -DROCM_DIR=$(Agent.BuildDirectory)/rocm \
          -DLLVM_DIR=$(Agent.BuildDirectory)/rocm/llvm \
          -DOPENCL_DIR=$(Agent.BuildDirectory)/rocm
        make
        make rocrtst_kernels
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/test.yml
    parameters:
      componentName: rocrtst
      testExecutable: ./rocrtst64
      testParameters: '--gtest_output=xml:./test_output.xml --gtest_color=yes'
      testDir: $(Agent.BuildDirectory)/ROCR-Runtime/rocrtst/suites/test_common/build/gfx942
