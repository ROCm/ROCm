parameters:
- name: checkoutRepo
  type: string
  default: 'self'
- name: checkoutRef
  type: string
  default: ''
- name: aptPackages
  type: object
  default:
    - cmake
    - libgtest-dev
    - libdw-dev
    - libsystemd-dev
    - libelf-dev
    - libnuma-dev
    - libpciaccess-dev
    - python3-pip
    - wget
    - tar
    - zstd
- name: pipModules
  type: object
  default:
    - pyyaml==5.3.1
    - Cppheaderparser
    - websockets
    - matplotlib
    - lxml
    - barectf
    - pandas
- name: rocmDependencies
  type: object
  default:
    - clr
    - llvm-project
    - rocminfo
    - ROCR-Runtime
    - ROCT-Thunk-Interface
    - roctracer

jobs:
- job: rocprofiler
  variables:
  - group: common
  - template: /.azuredevops/variables-global.yml
  pool: ${{ variables.LOW_BUILD_POOL }} # change this later
  workspace:
    clean: all
  steps:
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-other.yml
    parameters:
      aptPackages: ${{ parameters.aptPackages }}
      pipModules: ${{ parameters.pipModules }}
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/preamble.yml
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/checkout.yml
    parameters:
      checkoutRepo: ${{ parameters.checkoutRepo }}
# Manually download aqlprofile from external source
  - task: Bash@3
    displayName: 'Download aqlprofile'
    inputs:
      targetType: inline
      script: wget -nv https://ftp.sh.cvut.cz/arch/extra/os/x86_64/hsa-amd-aqlprofile-bin-6.0.2-1-x86_64.pkg.tar.zst
      workingDirectory: '$(Pipeline.Workspace)'
  - task: Bash@3
    displayName: 'Extract aqlprofile'
    inputs:
      targetType: inline
      script: mkdir hsa-amd-aqlprofile && tar --zstd -xf hsa-amd-aqlprofile-bin-6.0.2-1-x86_64.pkg.tar.zst -C hsa-amd-aqlprofile && mv hsa-amd-aqlprofile/opt/rocm .
      workingDirectory: '$(Pipeline.Workspace)'
# CI case: download latest default branch build
  - ${{ if eq(parameters.checkoutRef, '') }}:
    - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-rocm.yml
      parameters:
        dependencyList: ${{ parameters.rocmDependencies }}
        dependencySource: staging
# manual build case: triggered by ROCm/ROCm repo
  - ${{ if ne(parameters.checkoutRef, '') }}:
    - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-rocm.yml
      parameters:
        dependencyList: ${{ parameters.rocmDependencies }}
        dependencySource: tag-builds
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/build-cmake.yml
    parameters:
      extraBuildFlags: >-
        -DCMAKE_MODULE_PATH=$(Build.SourcesDirectory)/cmake_modules;$(Agent.BuildDirectory)/rocm/lib/cmake;$(Agent.BuildDirectory)/rocm/lib/cmake/hip
        -DCMAKE_PREFIX_PATH=$(Agent.BuildDirectory)/rocm
        -DENABLE_LDCONFIG=OFF
        -DUSE_PROF_API=1
        -DGPU_TARGETS=gfx1030;gfx1100
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/artifact-upload.yml
